swagger: '2.0'
info:
  description: Nine Gold API Documentation
  version: '1.0'
  title: Api Documentation for Nine Gold
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /
tags:
  - name: user-controller
    description: User Controller
  - name: stripe-controller
    description: Stripe Controller
  - name: auth-controller
    description: Authentication Controller
paths:
  /users/forgotPassword:
    put:
      tags:
        - user-controller
      summary: forgotPassword
      operationId: forgotPasswordUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: email
          in: query
          description: email
          required: true
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /users/me:
    get:
      tags:
        - user-controller
      summary: getMe
      operationId: getMeUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /users/terminate:
    delete:
      tags:
        - user-controller
      summary: delete
      operationId: deleteUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /users/updatePassword:
    put:
      tags:
        - user-controller
      summary: updatePassword
      operationId: updatePasswordUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: newPassword
          description: newPassword
          required: true
          schema:
            $ref: '#/definitions/NewPassword'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /users/updatePayment:
    put:
      tags:
        - user-controller
      summary: updatePayment
      operationId: updatePaymentUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: token
          description: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/users/{id}':
    get:
      tags:
        - user-controller
      summary: get
      operationId: getUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - user-controller
      summary: update
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/users/{planId}':
    post:
      tags:
        - user-controller
      summary: create
      operationId: createUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: planId
          in: path
          description: planId
          required: true
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /stripe/handleEvent:
    post:
      tags:
        - stripe-controller
      summary: handleEvent
      operationId: handleEventUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /stripe/plan:
    post:
      tags:
        - stripe-controller
      summary: createPlan
      operationId: createPlanUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '201':
          description: Created
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /auth/login:
    post:
      tags:
        - auth-controller
      summary: login
      operationId: loginUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /auth/logout:
    get:
      tags:
        - auth-controller
      summary: logout
      operationId: logoutUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  NewPassword:
    type: object
    properties:
      newPassword:
        type: string
      token:
        type: string
  UserSubscription:
    type: object
    required:
      - subscriptionId
      - subscriptionType
      - userId
    properties:
      id:
        type: integer
        format: int64
      userId:
        type: integer
        format: int64
      subscriptionId:
        type: string
      subscriptionType:
        type: string
  User:
    type: object
    properties:
      createdOn:
        type: string
        format: date-time
      customerId:
        type: string
      email:
        type: string
      expires:
        type: integer
        format: int64
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastLoginOn:
        type: string
        format: date-time
      lastModifiedOn:
        type: string
        format: date-time
      lastName:
        type: string
      password:
        type: string
      subscriptions:
        type: array
        items:
          $ref: '#/definitions/UserSubscription'
      terminated:
        type: boolean
